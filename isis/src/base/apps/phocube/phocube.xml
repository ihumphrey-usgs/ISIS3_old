<?xml version="1.0" encoding="UTF-8"?>

<application name="phocube" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://isis.astrogeology.usgs.gov/Schemas/Application/application.xsd">

  <brief>
    Creates a choice of multiple information bands for an image cube
  </brief>

  <description>
    <p>
    Phocube creates an output cube where each <def>band</def> represents a choice of information
    computed from either the <def>SPICE</def> for every pixel or the projection information for
    every pixel. The choices of information depends on the processing level of the image and
    ranges from photometric angles (phase, emission, incidence) to various azimuth angles and 
    resolution values. Images that have a camera model associated with them will have the ability
    to generate any of the possible bands of information provided by this program. Those images
    that do not have a camera model associated with them are more limited in the types of bands
    that can be produced by this program.
    </p>

    <p>
    The input cube is required to have had a successful 'spiceinit' applied previous to 
    running phocube or the input cube must have mapping labels associated with it.
    </p>

    <p>
    The BandBin group on the output image cube labels will be updated.  The "Name" keyword
    within the BandBin will be popluated with the names of the selected information bands.  
    These bands can be referenced by their names in applications such as mapmos and qview. 
    </p>
    
    <p>
     Phocube can be applied to a <def>Level1</def> or <def>Level2</def> image cube. Phocube can
     also be applied to any file as long as it has mapping labels contained in it, such as a 
     mosaic. The number of bands that can be created for an image without a camera model 
     associated with it are very limited. Image files that have only mapping labels (no camera
     model or SPICE information) will be limited to the ability to create Dn, PixelResolution, 
     Latitude, and Longitude.
    </p>
  </description>

  <oldName>
    <item>lev1geoplane</item>
    <item>levgeoplane</item>
    <item>geoback</item>
  </oldName>

  <liens>
    <item>Add resolution to possible outputs</item>
    <item>Convert to a IsisProcessBySpectra when it gets written</item>
  </liens>

  <history>
    <change name="Unknown" date="1999-02-11">
      Original version
    </change>
    <change name="Stuart Sides" date="2003-06-04">
      Converted to Isis 3.0, and made it create a cube rather than adding
      backplanes.
    </change>
    <change name="Stuart Sides" date="2003-07-29">
      Modified filename parameters to be cube parameters where necessary
    </change>
    <change name="Stuart Sides" date="2005-09-09">
      Fixed problem where the program through an error when it tried to propagate 
      the pixel type from the input file.
    </change>
    <change name="Stuart Sides" date="2005-09-09">
      Added the bandbin group to the cube labels.
    </change>
    <change name="Jeff Anderson" date="2005-09-20">
      Fixed a bug with switched samples and lines
    </change>
    <change name="Elizabeth Miller" date="2005-10-05">
        Moved into Photometry and Radiometry category
    </change>
    <change name="Elizabeth Miller" date="2006-05-23">
      Modified to use ProcessByBrick instead of ProcessByLine to make faster
    </change>
    <change name="Brendan George" date="2006-09-21">
        Documentation fixes
    </change>
    <change name="Steven Lambright" date="2008-05-13">
      Removed references to CubeInfo 
    </change>
    <change name="Steven Koechle" date="2008-08-19">
      Added new parameters: PIXELRESOLUTION, LINERESOLUTION,
      SAMPLERESOLUTION, DETECTORRESOLUTION, NORTHAZIMUTH, 
      SUNAZIMUTH, SPACECRAFTAZIMUTH, OFFNADIRANGLE
    </change>
    <change name="Steven Lambright" date="2009-03-06">
      Fixed a bug that occurred when processing band-dependant cubes
    </change>
   <change name="Kris Becker" date="2009-05-29">
      Added the propagation of the input cube labels, objects, blobs, etc..., so 
      the pedigree of the input source is retained.
    </change>
    <change name="Sharmila Prasad" date="2009-07-17">
      Set the defaults for PIXELRESOLUTION, LINERESOLUTION,
      SAMPLERESOLUTION, DETECTORRESOLUTION, NORTHAZIMUTH, 
      SUNAZIMUTH, SPACECRAFTAZIMUTH, OFFNADIRANGLE to FALSE
    </change>
    <change name="Mackenzie Boyd" date="2010-10-29">
      Added parameters/bands SUBSPACECRAFTGROUNDAZIMUTH and
      SUBSOLARGROUNDAZIMUTH.
    </change>
    <change name="Travis Addair" date="2011-02-10">
      Added parameters LOCALINCIDENCE and LOCALEMISSION.
    </change>
    <change name="Kris Becker" date="2011-08-08">
      Added the option to propagate the input pixel value (DN)
      as the first band (however, this, by default, will not be invoked as default so as to 
      preserve pre-existing behavior). Ensure the Center, OriginalBand, Name, and 
      Width BandBin  keyword values are populated properly and propagated to 
      the output label (should support camera models). Added MORPHOLOGY and 
      ALBEDO backplane options for special mosaic options.
    </change>
    <change name="Janet Barrett" date="2012-02-22">
      Added the capability to run this program on image files where the camera
      information is missing. The ability to generate lat/lon bands for 
      image files is highly useful when performing fx operations on the files.
      Other bands that can be created for a mosaic file include: Dn and PixelResolution.
      A new parameter, NoCamera, was added so that the user can specify
      if their image does not contain a camera model. This will result in the
      appropriate parameter choices being greyed out. If the user does not specify 
      that their file does not contain a camera model, then they will receive an error 
      if they choose to create a band that cannot be created for the file.
    </change>
    <change name="Debbie A. Cook" date="2012-07-06">
       Updated Spice members to be more compliant with Isis coding standards. References #972.
    </change>
</history>

  <category>
    <categoryItem>Radiometric and Photometric Correction</categoryItem>
    <categoryItem>Cameras</categoryItem>
  </category>

  <groups>
    <group name="Files">
      <parameter name="FROM">
        <type>cube</type>
        <fileMode>input</fileMode>
        <brief>
          Input cube
        </brief>
        <description>
          Use this parameter to select the input filename.  The application,
          spiceinit, must be successfully applied previously to running phocube.
          The input image cube can be a <def>Level1</def> or <def>Level2</def>.
        </description>
        <filter>
          *.cub
        </filter>
      </parameter>

      <parameter name="TO">
        <type>cube</type>
        <pixelType>real</pixelType>
        <fileMode>output</fileMode>
        <brief>
          Output cube
        </brief>
        <description>
          This output cube file will contain the bands of the chosen information.
          The BandBin Group on the labels of the output cube will be updated 
          with the Name keyword containing the output band names in the order
          that they are stacked within the cube.
        </description>
      </parameter>

      <parameter name="SOURCE">
        <type>string</type>
        <brief>Determines where geometric information will come from - camera or projection</brief>
        <default><item>CAMERA</item></default>
        <description>
          If this parameter is set to CAMERA, then all the band choices are available
          for the user to choose from. If this parameter is set to PROJECTION, then 
          only the DN, LATITUDE, LONGITUDE, and PIXELRESOLUTION band choices will
          be available and all other band choices will be greyed out. If the
          user sets this parameter to CAMERA and their input file does not contain
          a camera model or SPICE information, then they will receive an error
          when they choose a band option that is not valid for their file.
        </description>
        <list>
          <option value="CAMERA">
            <brief>Get geometric information from camera model</brief>
            <description>
              Geometric information will be obtained from a camera model and all the
              photometry options will be available.
            </description>
          </option>
          <option value="PROJECTION">
            <brief>Get geometric information from the projection</brief>
            <description>
              Geometric information will be obtained from the projection and only the
              DN, LATITUDE, LONGITUDE, and PIXELRESOLUTION photometry options will be
              available.
            </description>
            <exclusions>
              <item>PHASE</item>
              <item>EMISSION</item>
              <item>INCIDENCE</item>
              <item>LOCALEMISSION</item>
              <item>LOCALINCIDENCE</item>
              <item>LINERESOLUTION</item>
              <item>SAMPLERESOLUTION</item>
              <item>DETECTORRESOLUTION</item>
              <item>SUNAZIMUTH</item>
              <item>SPACECRAFTAZIMUTH</item>
              <item>OFFNADIRANGLE</item>
              <item>SUBSPACECRAFTGROUNDAZIMUTH</item>
              <item>SUBSOLARGROUNDAZIMUTH</item>
              <item>MORPHOLOGY</item>
              <item>ALBEDO</item>
              <item>NORTHAZIMUTH</item>
            </exclusions>
          </option>
        </list>
      </parameter>
    </group>

    <group name="Photometry">
      <parameter name="DN">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Propagate the input pixel to the output file.</brief>
        <description>
          If this parameter is true then the input image pixel value 
          (<def link="Digital Number">DN</def>) will be
          propagated to the output file.  This will help alleviate potential 
          additional runs of cubeit when necessary.  When this option is 
          selected, the BandBin values are retained for this band so that 
          geometry operations are preserved.
        </description>
      </parameter>
      <parameter name="PHASE">
        <type>boolean</type>
        <default><item>TRUE</item></default>
        <brief>Create a phase angle band.</brief>
        <description>
          If this parameter is true,  then for every input pixel, a <def>Phase Angle</def> 
          will be computed and placed in a band in the output cube.  The output 
          cube labels will contain Group=BandBin Name=PhaseAngle in the output band order.
          PhaseAngle is in degrees.
        </description>
      </parameter>
      <parameter name="EMISSION">
        <type>boolean</type>
        <default><item>TRUE</item></default>
        <brief>Create an emission angle band.</brief>
        <description>
          If this parameter is true,  then for every input pixel, a <def>Emission Angle</def> 
          will be computed and placed in a band in the output cube.  The output 
          cube labels will contain Group=BandBin Name=EmissionAngle in the output band order.
          EmissionAngle is in degrees.
        </description>
      </parameter>
      <parameter name="INCIDENCE">
        <type>boolean</type>
        <default><item>TRUE</item></default>
        <brief>Create an incidience angle band.</brief>
        <description>
          If this parameter is true,  then for every input pixel, a <def>Incidence Angle</def> 
          will be computed and placed in a band in the output cube.  The output 
          cube labels will contain Group=BandBin Name=IncidenceAngle in the output band order.
          IncidenceAngle is in degrees.
        </description>
      </parameter>
      <parameter name="LOCALEMISSION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a local emission angle band.</brief>
        <description>
          If this parameter is true then a <def link="Local Emission Angle">Local Emission Angle</def> 
          will be computed and placed in a band in the output cube.  The output 
          cube labels will contain Group=BandBin Name=LocalEmissionAngle in the output band order.  
          LocalIncidenceAngle is in degrees.
        </description>
      </parameter>
      <parameter name="LOCALINCIDENCE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a local incidience angle band.</brief>
        <description>
          If this parameter is true then a <def link="Local Incidence Angle">Local Incidence Angle</def>
          will be computed and placed in a band in the output cube.  The output 
          cube labels will contain Group=BandBin Name=LocalIncidenceAngle in the output band order.  
         </description>
      </parameter>
      <parameter name="LATITUDE">
        <type>boolean</type>
        <default><item>TRUE</item></default>
        <brief>Create a latitude band.</brief>
        <description>
          If this parameter is true,  then for every input pixel, a Latitude value will be computed
          and placed in a band in the output cube.  The output cube labels
          will contain Group=BandBin Name=Latitude in the output band order.
          Latitude is in degrees.
        </description>
      </parameter>
      <parameter name="LONGITUDE">
        <type>boolean</type>
        <default><item>TRUE</item></default>
        <brief>Create a longitude band.</brief>
        <description>
          If this parameter is true,  then for every input pixel, a Longitude value will be computed
          and placed in a band in the output cube.  The output cube labels
          will contain Group=BandBin Name=Longitude in the output band order.
          Longitude is in degrees.
        </description>
      </parameter>
      <parameter name="PIXELRESOLUTION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a pixel resolution band.</brief>
        <description>
          If this parameter is true,  then for every input pixel, a <def>Pixel Resolution</def>
          will be computed and placed in a band in the output cube.  The output cube labels
          will contain Group=BandBin Name=PixelResolution in the output band order.
          PixelResolution is in meters.
        </description>
      </parameter>
      <parameter name="LINERESOLUTION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a line resolution band.</brief>
        <description>
          If this parameter is true, then for every input pixel, a <def>Line Resolution</def>
          will be computed and placed in a band in the output cube.  The output cube labels
          will contain Group=BandBin Name=LineResolution in the output band order.
          LineResolution is in meters.
        </description>
      </parameter>
      <parameter name="SAMPLERESOLUTION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a sample resolution band.</brief>
        <description>
          If this parameter is true, then for every input pixel, a <def>Sample Resolution</def>
          will be computed and placed in a band in the output cube.  The output cube labels
          will contain Group=BandBin Name=SampleResolution in the output band order. 
          SampleResolution is in meters.
       </description>
      </parameter>
      <parameter name="DETECTORRESOLUTION">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a detector resolution band.</brief>
        <description>
          If this parameter is true, then for every input pixel, a 
          <def>Detector Resolution</def>
          will be computed and placed in a band in the output cube.  The output cube labels
          will contain Group=BandBin Name=DetectorResolution in the output band order. 
          DetectorResolution is in millimeters.
        </description>
      </parameter>
      <parameter name="NORTHAZIMUTH">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a north azimuth band.</brief>
        <description>
          If this parameter is true, then for every input pixel, a <def>North Azimuth</def>
          will be computed and placed in a band in the output cube.  The output cube labels
          will contain Group=BandBin Name=NorthAzimuth in the output band order. 
          NorthAzmith is in degree angles.
        </description>
      </parameter>
      <parameter name="SUNAZIMUTH">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a sun azimuth band.</brief>
        <description>
          If this parameter is true, then for every input pixel, a <def>Sun Azimuth</def>
          will be computed and placed in a band in the output cube.  The output cube labels
          will contain Group=BandBin Name=SunAzimuth in the output band order. 
          SunAzimuth is in degree angles.
        </description>
      </parameter>
      <parameter name="SPACECRAFTAZIMUTH">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a spacecraft azimuth band.</brief>
        <description>
          If this parameter is true, then for every input pixel, a <def>Spacecraft Azimuth</def>
          will be computed and placed in a band in the output cube.  The output cube labels
          will contain Group=BandBin Name=SpacecraftAzimuth in the output band order. 
          SpacecraftAzimuth is in degree angles.
        </description>
      </parameter>
      <parameter name="OFFNADIRANGLE">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a offNadir angle band.</brief>
        <description>
          If this parameter is true, then for every input pixel, a <def>Off Nadir Angle</def>
          will be computed and placed in a band in the output cube.  The output cube labels
          will contain Group=BandBin Name=OffNadirAngle in the output band order. 
          OffNadirAngle is in degrees.
        </description>
      </parameter>
      <parameter name="SUBSPACECRAFTGROUNDAZIMUTH">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Creata a sub spacecraft ground azimuth band.</brief>
        <description>
          If this parameter is true, then for every input pixel, a 
          <def>Spacecraft Ground Azimuth</def>
          will be computed and placed in a band in the output cube.  The output cube labels
          will contain Group=BandBin Name=SubSpacecraftGroundAzimuth in the output band order. 
          SubSpacecraftGroundAzimuth is in degree angles.
        </description>
      </parameter>
      <parameter name="SUBSOLARGROUNDAZIMUTH">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a sub solar ground azimuth band.</brief>
        <description>
          If this parameter is true, then for every input pixel, a 
          <def>SubSolar Ground Azimuth</def>
          will be computed and placed in a band in the output cube.  The output cube labels
          will contain Group=BandBin Name=SubSolarGroundAzimuth in the output band order. 
          SubSolarGroundAzimuth is in degree angles.
        </description>
      </parameter>
     <parameter name="MORPHOLOGY">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create a morphology index band</brief>
        <description>
          <p>
            This band is computed from the <def link="Pixel Resolution">resolution</def>
            and <def link="Emission Angle">emission angle</def> using the following formula:  
            MORPHOLOGY = PIXELRESOLUTION / cos(EMISSION).  
            The resulting output band can then be used by 'automos' to create a 
            morphology-based mosaic product.  This option will always use the 
            <def link="Local Emission Angle">local emission angle</def> if the input file
            was initialized (spiceinit) with an elevation model (DEM).   If not, it will 
            use the default calculation (from the ellipsoid).    All values are tested 
            for zero values and set to a constant very close to zero so all 
            pixels should have real values.
          </p>
          <p>
            To utilize the this backplane in automos, add the parameters 
            <b>priority=band type=keyword keyname=Name keyvalue=morphology 
              criteria=lesser</b>.  
            See <b>automos</b> documentation for further details.
          </p>
        </description>
      </parameter>
     <parameter name="ALBEDO">
        <type>boolean</type>
        <default><item>FALSE</item></default>
        <brief>Create an albedo index band</brief>
        <description>
          <p>
            This band is computed from the <def link="Pixel Resolution">resolution</def>, 
            <def link="Incidence Angle">incidence</def> and <def link="Emission Angle">emission</def> 
            angles using the following formula: ALBEDO = PIXELRESOLUTION * [  (1 
            / cos(EMISSION)) + (1 / cos(INCIDENCE)) ] .  The resulting output band 
            can then be used automos to create an albedo-based mosaic product. 
            This option will always use the <def link="Local Emission Angle">local emission</def> 
            and <def link="Local Incidence Angle">incidence</def> angles if the input file
            was initialized (spiceinit) with an elevation model (DEM).   If not, it will 
            use the default calculation (from the ellipsoid).  All values are tested for 
            zero values and set to a constant very close to zero so all pixels should have real 
            values.
          </p>
          <p>
            To utilize the this backplane in automos, add the parameters 
            <b>priority=band type=keyword keyname=Name keyvalue=albedo 
              criteria=lesser</b>.  
            See <b>automos</b> documentation for further details.
          </p>
        </description>
      </parameter>
    </group>
  </groups>
</application>
